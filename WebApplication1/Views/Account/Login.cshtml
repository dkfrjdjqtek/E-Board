@* 2025.09.16 Changed: 서버 ModelState를 EBValidate로 렌더링하도록 변경. 요약은 _ValidationAlert 사용. 필드별 invalid는 EBValidate.setInvalid 호출 *@
@using System.Linq
@using System.Text.Json
@inject Microsoft.Extensions.Localization.IStringLocalizer<SharedResource> S
@model WebApplication1.Models.LoginViewModel

@{
    ViewData["Title"] = S["Login_Title"];
    // 2025.09.16 Added: 서버 ModelState를 { 필드키: [메시지들] } 맵으로 변환
    var errMap = ViewData.ModelState
        .Where(kv => kv.Value?.Errors?.Count > 0)
        .ToDictionary(
            kv => kv.Key,
            kv => kv.Value!.Errors.Select(e => e.ErrorMessage).ToArray()
        );

    // 2025.09.16 Added: 요약 메시지 리스트
    var serverErrors = errMap.Values.SelectMany(v => v).ToArray();
}

<h1>@S["Login_Login"]</h1>

@* 2025.09.16 Added: 공통 요약 경고 박스 사용. 컨테이너 id는 login-alert *@
@await Html.PartialAsync(
        "~/Views/Shared/_ValidationAlert.cshtml",
        serverErrors,
        new ViewDataDictionary(ViewData) { ["AlertId"] = "login-alert" }
    )

<form asp-action="Login" method="post" novalidate>
    @Html.AntiForgeryToken()
    <input type="hidden" name="returnUrl" value="@ViewData["ReturnUrl"]" />

    @* 2025.09.16 Removed: MVC 기본 요약 출력. EBValidate 요약으로 통일 *@
    @* <div asp-validation-summary="All" class="alert alert-danger mb-3" role="alert"></div> *@

    <div class="mb-3">
        <label asp-for="UserName" class="form-label"></label>
        <input asp-for="UserName" class="form-control" autocomplete="username"
               placeholder="@S["Login_UserName_Placeholder"]" />
        @* 2025.09.16 Removed: 기본 span 출력. EBValidate invalid-feedback로 통일 *@
        @* <span asp-validation-for="UserName" class="text-danger"></span> *@
    </div>

    <div class="mb-3">
        <label asp-for="Password" class="form-label"></label>
        <input asp-for="Password" class="form-control" autocomplete="current-password"
               placeholder="@S["Login_Password_Placeholder"]" />
        @* 2025.09.16 Removed: 기본 span 출력. EBValidate invalid-feedback로 통일 *@
        @* <span asp-validation-for="Password" class="text-danger"></span> *@
    </div>

    <div class="form-check mb-3">
        <input asp-for="RememberMe" class="form-check-input" />
        <label asp-for="RememberMe" class="form-check-label"></label>
    </div>

    <div class="row g-2 mt-3">
        <div class="col-12 col-md-8">
            <button type="submit" class="btn btn-primary w-100 py-2">@S["Header_LogIn"]</button>
        </div>
        <div class="col-12 col-md-4">
            <a asp-area="Identity" asp-page="/Account/ForgotPassword"
               class="btn btn-warning w-100 py-2" role="button">
                @S["Login_ForgotPassword"]
            </a>
        </div>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // 2025.09.16 Added: 서버 ModelState를 클라이언트로 전달
        window.__LOGIN_ERRMAP__ = @Html.Raw(JsonSerializer.Serialize(errMap));

        // 2025.09.16 Added: EBValidate로 요약과 필드 invalid 상태를 동기화
        (function () {
            const map = window.__LOGIN_ERRMAP__ || {};
            // 요약
            const all = Object.values(map).flat();
            if (all.length && window.EBValidate) {
                EBValidate.showAlert('login-alert', all);
            }
            // 필드별 invalid 표시
            const idMap = {
                UserName: 'UserName',
                Password: 'Password'
            };
            Object.keys(map).forEach(k => {
                const id = idMap[k] || k;
                const el = document.getElementById(id);
                if (el && window.EBValidate) {
                    EBValidate.setInvalid(el, (map[k] && map[k][0]) || '');
                }
            });

            // 2025.09.16 Added: 사용자가 수정하면 해당 필드의 에러 해제
            ['UserName', 'Password'].forEach(id => {
                const el = document.getElementById(id);
                el && el.addEventListener('input', function () {
                    if (window.EBValidate) EBValidate.clearInvalid(el);
                });
            });
        })();
    </script>
}
