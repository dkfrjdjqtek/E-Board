@* 2025.09.23 Changed: 필드별 메시지 span 추가 + EBValidate 필드 마킹 제거(요약만) + 선행검사 캡처핸들러 단일화 *@
@page "{id?}"
@model WebApplication1.Areas.Identity.Pages.Admin.AdminUserProfileModel
@using Microsoft.AspNetCore.Mvc.Rendering
@inject Microsoft.Extensions.Localization.IStringLocalizer<SharedResource> _S

@{
    ViewData["Title"] = _S["ACP_Title"];

    var errMap = ViewData.ModelState
        .Where(kv => kv.Value?.Errors?.Count > 0)
        .ToDictionary(kv => kv.Key, kv => kv.Value!.Errors.Select(e => e.ErrorMessage).ToArray());
    var summaryMsgs = errMap.Values.SelectMany(v => v).Distinct().ToArray();

    var isCreate = string.Equals(
        Model.VM.SelectedUserId,
        WebApplication1.Areas.Identity.Pages.Admin.AdminUserProfileModel.NewUserId,
        StringComparison.Ordinal);
}

<h2 class="mb-3">@_S["ACP_Title"]</h2>

@await Html.PartialAsync(
        "~/Views/Shared/_ValidationAlert.cshtml",
        summaryMsgs,
        new ViewDataDictionary(ViewData) { ["AlertId"] = "admin-alert" }
    )

<form id="searchForm" method="get" class="row g-3 align-items-end mb-0">
    <input type="hidden" name="id" value="@Model.VM.SelectedUserId" />

    <div class="col-12 col-lg-5">
        <label class="form-label" for="q">@_S["ACP_Search_Label"]</label>
        <div class="input-group">
            <input id="q" name="q" class="form-control" value="@Model.VM.Q" placeholder="@_S["ACP_Search_Placeholder"]" />
            <button class="btn btn-primary" type="submit">@_S["ACP_Search_Load"]</button>
        </div>
    </div>

    <div class="col-12 col-lg-7">
        <label class="form-label" for="accountSel">@_S["ACP_AccountSelect_Label"]</label>
        <div class="d-flex gap-2">
            <select id="accountSel"
                    asp-for="VM.SelectedUserId"
                    asp-items="Model.VM.Accounts"
                    class="form-select flex-grow-1"
                    onchange="location.href='@Url.Page(null, new { id = "__ID__", q = Model.VM.Q })'.replace('__ID__', this.value || '')">
                <option value="">-- @_S["_CM_Select"] --</option>
            </select>

            <a id="btnAddUser"
               class="btn btn-success flex-shrink-0 text-nowrap px-4"
               style="min-width: 120px;"
               href="@Url.Page(null, new { id = WebApplication1.Areas.Identity.Pages.Admin.AdminUserProfileModel.NewUserId, q = Model.VM.Q })">
                @_S["ACP_AddUser"]
            </a>
        </div>
    </div>
</form>

<div class="card shadow-sm mt-4">
    <div class="card-body">
        <form id="adminForm" method="post" asp-page-handler="Save" novalidate>
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="VM.SelectedUserId" />

            <div class="row g-3">
                @* 사업장 *@
                <div class="col-md-6">
                    <label asp-for="VM.CompCd" class="form-label">@_S["_CM_Site_Label"]</label>
                    <select asp-for="VM.CompCd" asp-items="Model.VM.CompList" class="form-select"
                            required data-val="true" data-val-required="@_S["_Alert_Require_ValidSite"]">
                        <option value="">-- @_S["_CM_Select"] --</option>
                    </select>
                    <span asp-validation-for="VM.CompCd" class="invalid-feedback d-block"></span>
                </div>

                @* 이름 *@
                <div class="col-md-6">
                    <label asp-for="VM.DisplayName" class="form-label">@_S["_CM_Label_Name"]</label>
                    <input asp-for="VM.DisplayName" class="form-control" placeholder="@_S["_CM_Placeholder_Name"]"
                           required data-val="true" data-val-required="@_S["_Alert_Require_Name"]" />
                    <span asp-validation-for="VM.DisplayName" class="invalid-feedback d-block"></span>
                </div>

                @* 아이디 *@
                <div class="col-md-6">
                    <label class="form-label">@_S["_CM_Label_ID"]</label>
                    @if (isCreate)
                    {
                        <input asp-for="VM.UserName" class="form-control"
                               required data-val="true" data-val-required="@_S["_Alert_Require_ID"]" />
                        <span asp-validation-for="VM.UserName" class="invalid-feedback d-block"></span>
                    }
                    else
                    {
                        <input class="form-control" value="@Model.VM.UserName" readonly />
                    }
                </div>

                @* 이메일 *@
                <div class="col-md-6">
                    <label class="form-label">@_S["ACP_Email_Label"]</label>
                    @if (isCreate)
                    {
                        <input asp-for="VM.Email" type="email" class="form-control"
                               required data-val="true"
                               data-val-required="@_S["_Alert_Require_NewMail"]"
                               data-val-email="@_S["ACP_NewEmail_Invalid"]" />
                        <span asp-validation-for="VM.Email" class="invalid-feedback d-block"></span>
                    }
                    else
                    {
                        <div class="input-group">
                            <input class="form-control" value="@Model.VM.Email" readonly />
                            <button type="button" class="btn btn-secondary"
                                    data-bs-toggle="collapse" data-bs-target="#changeEmailPane" aria-expanded="false">
                                @_S["ACP_ChangeEmail_Button"]
                            </button>
                        </div>

                        <div id="changeEmailPane" class="collapse pt-2">
                            <div class="input-group">
                                <input type="email"
                                       class="form-control"
                                       name="newEmail"
                                       form="changeEmailForm"
                                       placeholder="@_S["ACP_NewEmail_Placeholder"]"
                                       required data-val="true" data-val-required="@_S["_Alert_Require_NewMail"]" />
                                <button type="submit" class="btn btn-outline-dark" form="changeEmailForm">
                                    @_S["ACP_ChangeEmail_Send"]
                                </button>
                            </div>
                            <div class="form-text">@_S["ACP_ChangeEmail_Help"]</div>
                        </div>
                    }
                </div>

                @* 부서 *@
                <div class="col-md-6">
                    <label asp-for="VM.DepartmentId" class="form-label">@_S["_CM_Label_Department"]</label>
                    <select asp-for="VM.DepartmentId" asp-items="Model.VM.DeptList" class="form-select"
                            required data-val="true" data-val-required="@_S["_Alert_Require_ValidDepartment"]">
                        <option value="">-- @_S["_CM_Select"] --</option>
                    </select>
                    <span asp-validation-for="VM.DepartmentId" class="invalid-feedback d-block"></span>
                </div>

                @* 직급 *@
                <div class="col-md-6">
                    <label asp-for="VM.PositionId" class="form-label">@_S["_CM_Label_Position"]</label>
                    <select asp-for="VM.PositionId" asp-items="Model.VM.PosList" class="form-select"
                            required data-val="true" data-val-required="@_S["_Alert_Require_ValidPosition"]">
                        <option value="">-- @_S["_CM_Select"] --</option>
                    </select>
                    <span asp-validation-for="VM.PositionId" class="invalid-feedback d-block"></span>
                </div>

                @* 전화/결재권자 *@
                <div class="col-md-6">
                    <label asp-for="VM.PhoneNumber" class="form-label">@_S["_CM_Label_Phone"]</label>
                    <input asp-for="VM.PhoneNumber" class="form-control" autocomplete="tel" placeholder="@_S["ACP_Phone_Placeholder"]" />
                    <span asp-validation-for="VM.PhoneNumber" class="invalid-feedback d-block"></span>

                    <div class="mt-3">
                        <label class="form-label">@_S["ACP_User_IsApprover"].Value</label>
                        <div class="form-check">
                            <input class="form-check-input"
                                   asp-for="VM.IsApprover"
                                   type="checkbox"
                                   id="isApproverChk"
                                   onchange="(function(el){
                   var y=@System.Text.Json.JsonSerializer.Serialize(_S["_CM_Yes"].Value);
                   var n=@System.Text.Json.JsonSerializer.Serialize(_S["_CM_No"].Value);
                   var lbl=document.getElementById('isApproverLbl');
                   if(lbl) lbl.textContent = el.checked ? y : n;
               })(this)" />
                            <label class="form-check-label" for="isApproverChk" id="isApproverLbl">
                                @(Model.VM.IsApprover ? _S["_CM_Yes"].Value : _S["_CM_No"].Value)
                            </label>
                        </div>
                    </div>
                </div>

                @* 권한/활성 *@
                <div class="col-md-6">
                    <label class="form-label">@_S["ACP_AdminLevel_Label"]</label>
                    <div class="d-flex align-items-center gap-3 pt-2">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" id="al0" name="VM.AdminLevel" value="0" @(Model.VM.AdminLevel == 0 ? "checked" : "")>
                            <label class="form-check-label" for="al0">@_S["ACP_AdminLevel_User"]</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" id="al1" name="VM.AdminLevel" value="1" @(Model.VM.AdminLevel == 1 ? "checked" : "")>
                            <label class="form-check-label" for="al1">@_S["ACP_AdminLevel_Manager"]</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" id="al2" name="VM.AdminLevel" value="2" @(Model.VM.AdminLevel == 2 ? "checked" : "")>
                            <label class="form-check-label" for="al2">@_S["ACP_AdminLevel_Admin"]</label>
                        </div>
                    </div>
                    <div class="mt-3">
                        <label class="form-label">@_S["ACP_User_IsActive"].Value</label>
                        <div class="form-check">
                            <input class="form-check-input"
                                   asp-for="VM.IsActive"
                                   type="checkbox"
                                   id="isActiveChk"
                                   onchange="(function(el){var y=@System.Text.Json.JsonSerializer.Serialize(_S["_CM_Yes"].Value);var n=@System.Text.Json.JsonSerializer.Serialize(_S["_CM_No"].Value);var lbl=document.getElementById('isActiveLbl');if(lbl) lbl.textContent = el.checked ? y : n;})(this)" />
                            <label class="form-check-label" for="isActiveChk" id="isActiveLbl">
                                @(Model.VM.IsActive ? _S["_CM_Yes"].Value : _S["_CM_No"].Value)
                            </label>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="row g-2 mt-4">
    <div class="col-12 col-md-6">
        <button type="submit" form="adminForm" class="btn btn-primary w-100 py-2">@_S["_CM_Save"]</button>
    </div>
    <div class="col-12 col-md-6">
        <button type="submit" form="adminForm" formaction="?handler=ResetPassword" formmethod="post"
                class="btn btn-warning w-100 py-2">
            @_S["ACP_Button_TempPassword"]
        </button>
    </div>
</div>

@if (!isCreate)
{
    <form id="changeEmailForm" method="post" asp-page-handler="SendChangeEmail">
        @Html.AntiForgeryToken()
        <input type="hidden" name="VM.SelectedUserId" value="@Model.VM.SelectedUserId" />
    </form>
}

<style>
    .input-group > .btn {
        white-space: nowrap;
    }

    .input-group > .form-select {
        min-width: 0;
        flex: 1 1 auto;
    }

    .card {
        border: 1px solid #e9ecef;
        border-radius: .75rem;
    }

    /* 계정 선택/사용자 추가 강조 */
    #accountSel.is-invalid {
        border-color: #dc3545;
    }

    #btnAddUser.is-invalid {
        outline: 2px solid #dc3545;
        outline-offset: 2px;
        box-shadow: 0 0 0 .2rem rgba(220,53,69,.25);
    }
</style>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Alert 컨테이너 보정 + 요약 표시 헬퍼 (기존 요약 UI 유지)
        function __ensureAdminAlertHost() {
            if (document.getElementById('admin-alert')) return;
            var host = document.createElement('div');
            host.id = 'admin-alert';
            host.className = 'mb-3';
            var h2 = document.querySelector('h2.mb-3');
            if (h2 && h2.parentNode) h2.parentNode.insertBefore(host, h2.nextSibling);
            else document.body.prepend(host);
        }
        function __showAdminAlert(msgs) {
            if (!window.EBValidate) return;
            __ensureAdminAlertHost();
            EBValidate.showAlert('admin-alert', Array.from(new Set(msgs || [])));
        }
    </script>

    <script>
        // 서버 ModelState → 요약 알림만 (필드 하단 텍스트는 기존 unobtrusive validate가 처리)
        window.__ADMIN_ERRMAP__ = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(errMap));
        (function () {
            var all = Object.values(window.__ADMIN_ERRMAP__ || {}).flat().filter(Boolean);
            if (all.length) __showAdminAlert(all);
        })();
    </script>

    <script>
        (function () {
            var form = document.getElementById('adminForm');
            if (!form) return;

            // ★ 선행검사(캡처 단계): 계정 미선택이면 다른 검증/제출 흐름 전에 즉시 차단
            var NEW_ID = "@WebApplication1.Areas.Identity.Pages.Admin.AdminUserProfileModel.NewUserId";
            form.addEventListener('submit', function (e) {
                try {
                    var hiddenId = (document.querySelector('input[name="VM.SelectedUserId"]')?.value || '').trim();
                    var selEl = document.getElementById('accountSel');
                    var selVal = selEl ? (selEl.value || '').trim() : '';
                    var isCreate = (hiddenId === NEW_ID) || (selVal === NEW_ID);

                    // __new(신규 추가)면 통과, 그 외에 id가 비어있으면 선행 조건 위반
                    if (!isCreate && !hiddenId) {
                        e.preventDefault();               // 제출 중단
                        e.stopPropagation();
                        e.stopImmediatePropagation();

                        // UI 강조(빨간 테두리)
                        selEl?.classList.add('is-invalid');
                        document.getElementById('btnAddUser')?.classList.add('is-invalid');

                        // 요약 알림(리소스 메시지)
                        __showAdminAlert([@System.Text.Json.JsonSerializer.Serialize(_S["ACP_SelectUser_Req"].Value)]);
                        return false;
                    }
                } catch (_) { /* no-op */ }
            }, true); // ← 캡처 단계에서 먼저 실행되도록 true

            // 강조 해제
            document.getElementById('accountSel')?.addEventListener('change', function () {
                this.classList.remove('is-invalid');
                document.getElementById('btnAddUser')?.classList.remove('is-invalid');
            });
            document.getElementById('btnAddUser')?.addEventListener('click', function () {
                this.classList.remove('is-invalid');
                document.getElementById('accountSel')?.classList.remove('is-invalid');
            });

            // ▼ 기존 jQuery Validate 설정은 그대로 두되, 메시지 텍스트만 주입
            var IS_CREATE = "@Model.VM.SelectedUserId" === NEW_ID;
            var reqMsgs = {
                "VM.CompCd": "@_S["_Alert_Require_ValidSite"]",
                "VM.DisplayName": "@_S["_Alert_Require_Name"]",
                "VM.DepartmentId": "@_S["_Alert_Require_ValidDepartment"]",
                "VM.PositionId": "@_S["_Alert_Require_ValidPosition"]"
            };
            if (IS_CREATE) {
                reqMsgs["VM.UserName"] = "@_S["_Alert_Require_ID"]";
                reqMsgs["VM.Email"] = "@_S["_Alert_Require_NewMail"]";
            }

            $(function () {
                var $f = $(form);
                var v = $f.data('validator') || $f.validate();
                if (!v) return;

                v.settings.onkeyup = false;
                v.settings.onfocusout = false;
                v.settings.onclick = false;

                v.settings.messages = v.settings.messages || {};
                Object.keys(reqMsgs).forEach(function (name) {
                    v.settings.messages[name] = v.settings.messages[name] || {};
                    v.settings.messages[name].required = reqMsgs[name];
                });

                var names = ["VM.CompCd", "VM.DisplayName", "VM.DepartmentId", "VM.PositionId"];
                if (IS_CREATE) names.push("VM.UserName", "VM.Email");

                names.forEach(function (n) {
                    var $el = $f.find('[name="' + n + '"]');
                    if ($el.length && $el.rules) {
                        var rule = { required: true };
                        if (n === "VM.Email") rule.email = true;
                        $el.rules("add", rule);
                    }
                });

                // 클라이언트 검증 실패 시 요약만 갱신 (필드 하단 메시지는 jQuery Validate가 자동 출력)
                $('#adminForm').on('invalid-form.validate', function (_e, v) {
                    var msgs = (v.errorList || []).map(function (item) {
                        var name = (item.element && item.element.name) || "";
                        return (v.settings.messages[name] && v.settings.messages[name].required) || item.message;
                    });
                    __showAdminAlert(msgs);
                });
            });
        })();
    </script>
}

